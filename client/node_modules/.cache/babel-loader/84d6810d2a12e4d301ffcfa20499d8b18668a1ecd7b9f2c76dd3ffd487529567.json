{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Z820 WORKSTATION\\\\Desktop\\\\Authors\\\\client\\\\src\\\\views\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AuthorList from '../components/AuthorList';\nimport CreateAuthor from '../components/CreateAuthor';\nimport EditAuthor from '../components/EditAuthor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [authors, setAuthors] = useState([]);\n  const [currentAuthor, setCurrentAuthor] = useState(null);\n  const [update, setUpdate] = useState(false);\n  useEffect(() => {\n    // Fetch authors from API when the component mounts or update changes\n    axios.get('/api/authors').then(response => {\n      setAuthors(response.data);\n      setUpdate(false); // reset update state after successful fetch\n    }).catch(error => console.error(error));\n  }, [update]);\n  const createAuthor = author => {\n    // TODO: Implement API call to create author and then setUpdate to true\n  };\n  const updateAuthor = (id, author) => {\n    // TODO: Implement API call to update author and then setUpdate to true\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AuthorList, {\n      authors: authors,\n      update: update\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateAuthor, {\n      createAuthor: createAuthor,\n      update: update,\n      setUpdate: setUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), currentAuthor && /*#__PURE__*/_jsxDEV(EditAuthor, {\n      currentAuthor: currentAuthor,\n      updateAuthor: updateAuthor,\n      update: update,\n      setUpdate: setUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"Bm6T8AbzaBOaAl2PVZjLEkhDBi0=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","axios","AuthorList","CreateAuthor","EditAuthor","jsxDEV","_jsxDEV","Main","_s","authors","setAuthors","currentAuthor","setCurrentAuthor","update","setUpdate","get","then","response","data","catch","error","console","createAuthor","author","updateAuthor","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Z820 WORKSTATION/Desktop/Authors/client/src/views/Main.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport AuthorList from '../components/AuthorList';\r\nimport CreateAuthor from '../components/CreateAuthor';\r\nimport EditAuthor from '../components/EditAuthor';\r\n\r\nconst Main = () => {\r\n  const [authors, setAuthors] = useState([]);\r\n  const [currentAuthor, setCurrentAuthor] = useState(null);\r\n  const [update, setUpdate] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch authors from API when the component mounts or update changes\r\n    axios.get('/api/authors')\r\n      .then(response => {\r\n        setAuthors(response.data);\r\n        setUpdate(false); // reset update state after successful fetch\r\n      })\r\n      .catch(error => console.error(error));\r\n  }, [update]);\r\n\r\n  const createAuthor = (author) => {\r\n    // TODO: Implement API call to create author and then setUpdate to true\r\n  };\r\n\r\n  const updateAuthor = (id, author) => {\r\n    // TODO: Implement API call to update author and then setUpdate to true\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AuthorList authors={authors} update={update} />\r\n      <CreateAuthor createAuthor={createAuthor} update={update} setUpdate={setUpdate} />\r\n      {currentAuthor && <EditAuthor currentAuthor={currentAuthor} updateAuthor={updateAuthor} update={update} setUpdate={setUpdate} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAACc,GAAG,CAAC,cAAc,CAAC,CACtBC,IAAI,CAACC,QAAQ,IAAI;MAChBP,UAAU,CAACO,QAAQ,CAACC,IAAI,CAAC;MACzBJ,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CACDK,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,CAACP,MAAM,CAAC,CAAC;EAEZ,MAAMS,YAAY,GAAIC,MAAM,IAAK;IAC/B;EAAA,CACD;EAED,MAAMC,YAAY,GAAGA,CAACC,EAAE,EAAEF,MAAM,KAAK;IACnC;EAAA,CACD;EAED,oBACEjB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA,CAACJ,UAAU;MAACO,OAAO,EAAEA,OAAQ;MAACI,MAAM,EAAEA;IAAO;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChDxB,OAAA,CAACH,YAAY;MAACmB,YAAY,EAAEA,YAAa;MAACT,MAAM,EAAEA,MAAO;MAACC,SAAS,EAAEA;IAAU;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACjFnB,aAAa,iBAAIL,OAAA,CAACF,UAAU;MAACO,aAAa,EAAEA,aAAc;MAACa,YAAY,EAAEA,YAAa;MAACX,MAAM,EAAEA,MAAO;MAACC,SAAS,EAAEA;IAAU;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7H,CAAC;AAEV,CAAC;AAACtB,EAAA,CA9BID,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AAgCV,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}